pipeline {
    agent any
    stages {
        stage('Clean') {
            steps {
                echo 'Cleaning...'
                sh 'mvn clean'
            }
        }
        stage('Package') {
            steps {
                echo 'Packaging...'
                sh 'mvn package'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                sh 'mvn test'
            }
        }
        stage('Build') {
            steps {
                echo 'Building...'
                sh 'mvn install'
            }
        }
        stage('Install') {
            steps {
                echo 'Installing...'
                sh 'mvn install'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('Sonar') { // Replace 'Sonar' with your SonarQube server name in Jenkins
                    sh '''
                        mvn sonar:sonar \
                          -Dsonar.projectKey=your_project_key \
                          -Dsonar.organization=your_org \
                          -Dsonar.host.url=https://sonarcloud.io \
                          -Dsonar.login=your_sonar_token
                    '''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true // Abort if quality gate fails
                }
            }
        }
    }
}
